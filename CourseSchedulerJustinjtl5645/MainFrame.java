/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package CourseSchedulerJustinjtl5645;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import javax.swing.JOptionPane;
import java.util.Calendar;
import javax.swing.SpinnerNumberModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String author;
    private String project;

    @SuppressWarnings("OverridableMethodCallInConstructor")
    public MainFrame() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
        rebuildClassComboBoxes();
        addClassSeatsSpinner.setModel(new SpinnerNumberModel(0, 0, null, 1));
    }
 
    @SuppressWarnings("unchecked")
    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (!semesters.isEmpty()) {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    @SuppressWarnings("unchecked")
    public void rebuildCourseComboBoxes() {
        ArrayList<String> courses = CourseQueries.getAllCourseCodes();
        addClassCourseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        
    }
    @SuppressWarnings("unchecked")
    public void rebuildStudentComboBoxes() {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        int size = students.size();
        String[] names = new String[size];
        String[] namesWithID = new String[size];

        for (int i = 0; i < size; i++) {
            StudentEntry student = students.get(i);
            String fullName = student.getLastName() + "," + student.getFirstName();
            names[i] = fullName;
            namesWithID[i] = fullName + " " + student.getStudentID();
        }

        javax.swing.DefaultComboBoxModel<String> namesModel = new javax.swing.DefaultComboBoxModel<>(names);
        javax.swing.DefaultComboBoxModel<String> namesWithIDModel = new javax.swing.DefaultComboBoxModel<>(namesWithID);

        scheduleClassSelectStudentComboBox.setModel(namesModel);
        displayStudentScheduleSelectStudentComboBox.setModel(namesModel);
        dropStudentChooseStudentComboBox.setModel(namesWithIDModel);
        studentDropClassChooseStudentComboBox.setModel(namesWithIDModel);
    }
    //ClassComboBox
    @SuppressWarnings("unchecked")
    public void rebuildClassComboBoxes() {
        ArrayList<String> classes = ClassQueries.getAllCourseCodes(currentSemester);
        scheduleClassSelectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        displayClassListChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        studentDropClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        adminDropClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        displayClassListTab = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        addSemesterSemesterNameLabel = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        addCourseCourseCodeLabel = new javax.swing.JLabel();
        addCourseCourseCodeTextField = new javax.swing.JTextField();
        addCourseCourseDescriptionLabel = new javax.swing.JLabel();
        addCourseCourseDescriptionTextField = new javax.swing.JTextField();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        addStudentStudentIDLabel = new javax.swing.JLabel();
        addStudentFirstNameLabel = new javax.swing.JLabel();
        addStudentLastNameLabel = new javax.swing.JLabel();
        addStudentStudentIDTextField = new javax.swing.JTextField();
        addStudentFirstNameTextField = new javax.swing.JTextField();
        addStudentLastNameTextField = new javax.swing.JTextField();
        addStudentSubmitButton = new javax.swing.JButton();
        addStudentSuccessLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        addClassCourseCodeLabel = new javax.swing.JLabel();
        addClassSeatsLabel = new javax.swing.JLabel();
        addClassSuccessLabel = new javax.swing.JLabel();
        addClassSubmitButton = new javax.swing.JButton();
        addClassSeatsSpinner = new javax.swing.JSpinner();
        addClassCourseCodeComboBox = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        chooseClassLabel = new javax.swing.JLabel();
        displayClassListChooseClassComboBox = new javax.swing.JComboBox<>();
        waitlistedStudentsInClassLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        waitlistedStudentsInClassTextArea = new javax.swing.JTextArea();
        scheduledStudentInClassLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        scheduledStudentsInClassTextArea = new javax.swing.JTextArea();
        displayClassListDisplayButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        dropStudentChooseStudentComboBox = new javax.swing.JComboBox<>();
        adminDropStudentSubmitButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        adminDropStudentTextArea = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        adminDropClassChooseClassLabel = new javax.swing.JLabel();
        adminDropClassChooseClassComboBox = new javax.swing.JComboBox<>();
        adminDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        adminDropClassTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        dropClassTab = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        displayClassesDisplayButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayClassesTextArea = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        scheduleClassSelectClassLabel = new javax.swing.JLabel();
        scheduleClassSelectStudentLabel = new javax.swing.JLabel();
        scheduleClassSelectClassComboBox = new javax.swing.JComboBox<>();
        scheduleClassSelectStudentComboBox = new javax.swing.JComboBox<>();
        scheduleClassSubmitButton = new javax.swing.JButton();
        scheduleClassSuccessField = new javax.swing.JLabel();
        scheduleClassSuccessLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        displayStudentScheduleSelectStudentLabel = new javax.swing.JLabel();
        displayStudentScheduleSelectStudentComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayStudentScheduleTextArea = new javax.swing.JTextArea();
        displayStudentScheduleDisplayButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        dropClassChooseStudentLabel = new javax.swing.JLabel();
        studentDropClassChooseStudentComboBox = new javax.swing.JComboBox<>();
        dropClassChooseClassLabel = new javax.swing.JLabel();
        studentDropClassChooseClassComboBox = new javax.swing.JComboBox<>();
        studentDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        studentDropClassTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        addSemesterSemesterNameLabel.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });
        addSemesterStatusLabel.setText("                                                   ");
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(addSemesterSemesterNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addSemesterSubmitButton)
                            .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSemesterSemesterNameLabel)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayClassListTab.addTab("Add Semester", jPanel3);
        addCourseCourseCodeLabel.setText("Course Code:");
        addCourseCourseDescriptionLabel.setText("Course Description:");
        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(addCourseCourseCodeLabel)
                        .addGap(41, 41, 41)
                        .addComponent(addCourseCourseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(addCourseCourseDescriptionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseSubmitButton)
                            .addComponent(addCourseCourseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseCourseCodeLabel)
                    .addComponent(addCourseCourseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseCourseDescriptionLabel)
                    .addComponent(addCourseCourseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addCourseSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCourseStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        displayClassListTab.addTab("Add Course", jPanel4);
        addStudentStudentIDLabel.setText("Student ID:");
        addStudentFirstNameLabel.setText("First Name:");
        addStudentLastNameLabel.setText("Last Name:");
        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            addStudentSubmitButtonActionPerformed(evt);
        });
        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                            .addComponent(addStudentFirstNameLabel)
                            .addGap(18, 18, 18)
                            .addComponent(addStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(addStudentStudentIDLabel)
                            .addGap(20, 20, 20)
                            .addComponent(addStudentStudentIDTextField))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(addStudentLastNameLabel)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(addStudentSubmitButton)
                                .addComponent(addStudentLastNameTextField))))
                    .addComponent(addStudentSuccessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentStudentIDLabel)
                    .addComponent(addStudentStudentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentFirstNameLabel)
                    .addComponent(addStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentLastNameLabel)
                    .addComponent(addStudentLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addStudentSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(addStudentSuccessLabel)
                .addGap(67, 67, 67))
        );
        displayClassListTab.addTab("Add Student", jPanel6);
        addClassCourseCodeLabel.setText("Course Code:");
        addClassSeatsLabel.setText("Seats:");
        addClassSubmitButton.setText("Submit");
        addClassSubmitButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            addClassSubmitButtonActionPerformed(evt);
        });
        addClassCourseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(addClassCourseCodeLabel)
                                .addGap(18, 18, 18)
                                .addComponent(addClassCourseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(addClassSeatsLabel)
                            .addComponent(addClassSuccessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassSubmitButton)
                            .addComponent(addClassSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addClassCourseCodeLabel)
                    .addComponent(addClassCourseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addClassSeatsLabel)
                    .addComponent(addClassSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(addClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addClassSuccessLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayClassListTab.addTab("Add Class", jPanel7);
        chooseClassLabel.setText("Choose Class:");
        displayClassListChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        waitlistedStudentsInClassLabel.setText("Waitlisted Students in the Class in Waitlist Order:");
        waitlistedStudentsInClassTextArea.setColumns(20);
        waitlistedStudentsInClassTextArea.setRows(5);
        jScrollPane3.setViewportView(waitlistedStudentsInClassTextArea);
        scheduledStudentInClassLabel1.setText("Scheduled Students in the Class:");
        scheduledStudentsInClassTextArea.setColumns(20);
        scheduledStudentsInClassTextArea.setRows(5);
        jScrollPane4.setViewportView(scheduledStudentsInClassTextArea);
        displayClassListDisplayButton.setText("Display");
        displayClassListDisplayButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            displayClassListDisplayButtonActionPerformed(evt);
        });
        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scheduledStudentInClassLabel1)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(chooseClassLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayClassListChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayClassListDisplayButton))
                    .addComponent(waitlistedStudentsInClassLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseClassLabel)
                    .addComponent(displayClassListChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayClassListDisplayButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scheduledStudentInClassLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(waitlistedStudentsInClassLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        displayClassListTab.addTab("Display Class List", jPanel10);
        jLabel3.setText("Choose Student:");
        dropStudentChooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        adminDropStudentSubmitButton.setText("Submit");
        adminDropStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropStudentSubmitButtonActionPerformed(evt);
            }
        });
        adminDropStudentTextArea.setColumns(20);
        adminDropStudentTextArea.setRows(5);
        jScrollPane5.setViewportView(adminDropStudentTextArea);
        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dropStudentChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adminDropStudentSubmitButton))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dropStudentChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDropStudentSubmitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        displayClassListTab.addTab("Drop Student", jPanel12);
        adminDropClassChooseClassLabel.setText("Choose Class:");
        adminDropClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        adminDropClassSubmitButton.setText("Submit");
        adminDropClassSubmitButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            adminDropClassSubmitButtonActionPerformed(evt);
        });
        adminDropClassTextArea.setColumns(20);
        adminDropClassTextArea.setRows(5);
        jScrollPane7.setViewportView(adminDropClassTextArea);
        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(adminDropClassChooseClassLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminDropClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adminDropClassSubmitButton)))
                .addContainerGap(357, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminDropClassChooseClassLabel)
                    .addComponent(adminDropClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDropClassSubmitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        displayClassListTab.addTab("Drop Class", jPanel13);
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(displayClassListTab)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(displayClassListTab, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Admin", jPanel1);
        displayClassesDisplayButton.setText("Display");
        displayClassesDisplayButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            displayClassesDisplayButtonActionPerformed(evt);
        });
        displayClassesTextArea.setColumns(20);
        displayClassesTextArea.setRows(5);
        jScrollPane1.setViewportView(displayClassesTextArea);
        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayClassesDisplayButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayClassesDisplayButton)
                .addGap(23, 23, 23))
        );
        dropClassTab.addTab("Display Classes", jPanel5);
        scheduleClassSelectClassLabel.setText("Select Class:");
        scheduleClassSelectStudentLabel.setText("Select Student:");
        scheduleClassSelectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        scheduleClassSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        scheduleClassSubmitButton.setText("Submit");
        scheduleClassSubmitButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            scheduleClassSubmitButtonActionPerformed(evt);
        });
        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(scheduleClassSelectClassLabel)
                        .addGap(31, 31, 31)
                        .addComponent(scheduleClassSelectClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(scheduleClassSelectStudentLabel)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scheduleClassSubmitButton)
                            .addComponent(scheduleClassSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(scheduleClassSuccessField, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scheduleClassSuccessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduleClassSelectClassLabel)
                    .addComponent(scheduleClassSelectClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduleClassSelectStudentLabel)
                    .addComponent(scheduleClassSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(scheduleClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scheduleClassSuccessField)
                .addGap(18, 18, 18)
                .addComponent(scheduleClassSuccessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dropClassTab.addTab("Schedule Class", jPanel8);
        displayStudentScheduleSelectStudentLabel.setText("Select Student:");
        displayStudentScheduleSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        displayStudentScheduleTextArea.setColumns(20);
        displayStudentScheduleTextArea.setRows(5);
        jScrollPane2.setViewportView(displayStudentScheduleTextArea);
        displayStudentScheduleDisplayButton.setText("Display");
        displayStudentScheduleDisplayButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            displayStudentScheduleDisplayButtonActionPerformed(evt);
        });
        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(displayStudentScheduleSelectStudentLabel)
                        .addGap(18, 18, 18)
                        .addComponent(displayStudentScheduleSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayStudentScheduleDisplayButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayStudentScheduleSelectStudentLabel)
                    .addComponent(displayStudentScheduleSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayStudentScheduleDisplayButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dropClassTab.addTab("Display Student Schedule", jPanel9);
        dropClassChooseStudentLabel.setText("Choose Student:");
        studentDropClassChooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dropClassChooseClassLabel.setText("Choose Class:");
        studentDropClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        studentDropClassSubmitButton.setText("Submit");
        studentDropClassSubmitButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            studentDropClassSubmitButtonActionPerformed(evt);
        });
        studentDropClassTextArea.setColumns(20);
        studentDropClassTextArea.setRows(5);
        jScrollPane6.setViewportView(studentDropClassTextArea);
        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dropClassChooseStudentLabel)
                            .addComponent(dropClassChooseClassLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentDropClassChooseStudentComboBox, 0, 118, Short.MAX_VALUE)
                            .addComponent(studentDropClassChooseClassComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(studentDropClassSubmitButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dropClassChooseStudentLabel)
                            .addComponent(studentDropClassChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dropClassChooseClassLabel)
                            .addComponent(studentDropClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(studentDropClassSubmitButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dropClassTab.addTab("Drop Class", jPanel11);
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(dropClassTab, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(dropClassTab, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Student", jPanel2);
        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");
        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });
        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeSemesterButton)
                                .addGap(31, 31, 31)
                                .addComponent(aboutButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {
    JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
}

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }

    private void displayStudentScheduleDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String studentID = StudentQueries.getAllStudents().get(displayStudentScheduleSelectStudentComboBox.getSelectedIndex()).getStudentID();
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        displayStudentScheduleTextArea.setText("Course Code\tStatus\n");
        for (ScheduleEntry entry : schedule) {
            displayStudentScheduleTextArea.append(entry.getCourseCode() + "\t" + (entry.getStatus().equals("S") ? "Scheduled" : "Waitlisted") + "\n");
        }
    }

    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String courseCode = addCourseCourseCodeTextField.getText();
        String description = addCourseCourseDescriptionTextField.getText();
        CourseQueries.addCourse(new CourseEntry(courseCode, description));
        addCourseStatusLabel.setText(courseCode + " has been added.");
        rebuildCourseComboBoxes();
    }

    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String studentID = addStudentStudentIDTextField.getText();
        String firstName = addStudentFirstNameTextField.getText();
        String lastName = addStudentLastNameTextField.getText();
        StudentQueries.addStudent(new StudentEntry(studentID, firstName, lastName));
        addStudentSuccessLabel.setText(lastName + ", " + firstName + " has been added.");
        rebuildStudentComboBoxes();
    }

    private void displayClassesDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {
        ArrayList<ClassDescription> classes = MultiTableQueries.getAllClassDescriptions(currentSemester);
        displayClassesTextArea.setText("Course Code\tDescription\tSeats\n");
        for (ClassDescription classEntry : classes) {
            displayClassesTextArea.append(classEntry.getCourseCode() + "\t" + classEntry.getDescription() + "\t" + classEntry.getSeats() + "\n");
        }
    }

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {
        currentSemester = currentSemesterComboBox.getSelectedItem().toString();
        currentSemesterLabel.setText(currentSemester);
        rebuildClassComboBoxes();
    }

    private void scheduleClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String courseCode = scheduleClassSelectClassComboBox.getSelectedItem().toString();
        String studentID = StudentQueries.getAllStudents().get(scheduleClassSelectStudentComboBox.getSelectedIndex()).getStudentID();
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        if (ScheduleQueries.getScheduledStudentCount(currentSemester, courseCode) < ClassQueries.getClassSeats(currentSemester, courseCode)) {
            ScheduleQueries.addScheduleEntry(new ScheduleEntry(currentSemester, courseCode, studentID, "S", currentTimestamp));
            scheduleClassSuccessLabel.setText(scheduleClassSelectStudentComboBox.getSelectedItem().toString() + " has been scheduled for the class");
        } else {
            ScheduleQueries.addScheduleEntry(new ScheduleEntry(currentSemester, courseCode, studentID, "W", currentTimestamp));
            scheduleClassSuccessLabel.setText(scheduleClassSelectStudentComboBox.getSelectedItem().toString() + " has been waitlisted for the class");
        }
    }

    private void addClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String courseCode = addClassCourseCodeComboBox.getSelectedItem().toString();
        int seats = (int) (addClassSeatsSpinner.getValue());
        ClassQueries.addClass(new ClassEntry(currentSemester, courseCode, seats));
        addClassSuccessLabel.setText("Class " + courseCode + " has been added.");
        rebuildClassComboBoxes();
    }

    private void displayClassListDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String courseCode = displayClassListChooseClassComboBox.getSelectedItem().toString();
        ArrayList<StudentEntry> scheduled = MultiTableQueries.getScheduledStudentsByClass(currentSemester, courseCode);
        ArrayList<StudentEntry> waitlisted = MultiTableQueries.getWaitlistedStudentsByClass(currentSemester, courseCode);
        scheduledStudentsInClassTextArea.setText("Last Name\tFirst Name\tStudent ID\n");
        for (StudentEntry scheduledStudent : scheduled) {
            scheduledStudentsInClassTextArea.append(scheduledStudent.getLastName() + "\t" + scheduledStudent.getFirstName() + "\t" + scheduledStudent.getStudentID() + "\n");
        }
        waitlistedStudentsInClassTextArea.setText("Last Name\tFirst Name\tStudent ID\n");
        for (StudentEntry waitlistedStudent : waitlisted) {
            waitlistedStudentsInClassTextArea.append(waitlistedStudent.getLastName() + "\t" + waitlistedStudent.getFirstName() + "\t" + waitlistedStudent.getStudentID() + "\n");
        }
    }

    private void studentDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String courseCode = studentDropClassChooseClassComboBox.getSelectedItem().toString();
        StudentEntry student = StudentQueries.getAllStudents().get(studentDropClassChooseStudentComboBox.getSelectedIndex());
        boolean inClass = false;
        ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getScheduleByStudent(currentSemester, student.getStudentID());
        for (ScheduleEntry entry : studentSchedule) {
            if (entry.getCourseCode().equals(courseCode)) {
                inClass = true;
            }
        }
        if (inClass) {
            studentDropClassTextArea.setText(student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID() + " has been dropped from " + courseCode + "\n");
            ScheduleQueries.dropStudentScheduleByCourse(currentSemester, student.getStudentID(), courseCode);
            ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByClass(currentSemester, courseCode);
            if (!waitlist.isEmpty()) {
                ScheduleEntry newStudentSchedule = waitlist.get(0);
                StudentEntry newStudent = StudentQueries.getStudent(newStudentSchedule.getStudentID());
                studentDropClassTextArea.append(newStudentSchedule.getStudentID() + " " + newStudent.getFirstName() + " " + newStudent.getLastName() + " has been scheduled into " + courseCode + "\n");
                ScheduleQueries.updateScheduleEntry(newStudentSchedule);
            }
        }
    }

    private void adminDropStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        StudentEntry droppedStudent = StudentQueries.getAllStudents().get(dropStudentChooseStudentComboBox.getSelectedIndex());
        adminDropStudentTextArea.setText(droppedStudent.getLastName() + ", " + droppedStudent.getFirstName() + " " + droppedStudent.getStudentID() + " has been dropped from the list of all students.\n");
        ArrayList<String> semesterList = SemesterQueries.getSemesterList();
        ArrayList<ScheduleEntry> scheduledClasses = null;
        ArrayList<ScheduleEntry> waitlist = null;
        StudentEntry addedStudent = null;
        ScheduleEntry addedStudentSchedule = null;
        for (String semester : semesterList) {
            scheduledClasses = ScheduleQueries.getScheduleByStudent(semester, droppedStudent.getStudentID());
            adminDropStudentTextArea.append("\nFor Semester: " + semester + "\n");
            for (ScheduleEntry scheduledClass : scheduledClasses) {
                if (scheduledClass.getStatus().equals("S")) {
                    adminDropStudentTextArea.append(droppedStudent.getLastName() + ", " + droppedStudent.getFirstName() + " " + droppedStudent.getStudentID() + " has been dropped from " + scheduledClass.getCourseCode() + "\n");
                    ScheduleQueries.dropStudentScheduleByCourse(semester, droppedStudent.getStudentID(), scheduledClass.getCourseCode());
                    waitlist = ScheduleQueries.getWaitlistedStudentsByClass(semester, scheduledClass.getCourseCode());
                    if (!waitlist.isEmpty()) {
                        addedStudentSchedule = waitlist.get(0);
                        addedStudent = StudentQueries.getStudent(addedStudentSchedule.getStudentID());
                        adminDropStudentTextArea.append(addedStudent.getLastName() + ", " + addedStudent.getFirstName() + " " + addedStudent.getStudentID() + " has been scheduled into " + scheduledClass.getCourseCode() + "\n");
                        ScheduleQueries.updateScheduleEntry(addedStudentSchedule);
                    }
                } else {
                    adminDropStudentTextArea.append(droppedStudent.getLastName() + ", " + droppedStudent.getFirstName() + " " + droppedStudent.getStudentID() + " has been dropped from the waitlist for " + scheduledClass.getCourseCode() + "\n");
                    ScheduleQueries.dropStudentScheduleByCourse(semester, droppedStudent.getStudentID(), scheduledClass.getCourseCode());
                }
            }
        }
        StudentQueries.dropStudent(droppedStudent.getStudentID());
        rebuildStudentComboBoxes();
    }

    private void adminDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String courseCode = adminDropClassChooseClassComboBox.getSelectedItem().toString();

        // Retrieve students for the class
        ArrayList<StudentEntry> scheduledStudents = MultiTableQueries.getScheduledStudentsByClass(currentSemester, courseCode);
        ArrayList<StudentEntry> waitlistedStudents = MultiTableQueries.getWaitlistedStudentsByClass(currentSemester, courseCode);

        // Output dropped students
        adminDropClassTextArea.setText("Scheduled students dropped from the course:\n");
        scheduledStudents.forEach(student -> adminDropClassTextArea.append(String.format("%s, %s %s\n", student.getLastName(), student.getFirstName(), student.getStudentID())));

        adminDropClassTextArea.append("\nWaitlisted students dropped from the course:\n");
        waitlistedStudents.forEach(student -> adminDropClassTextArea.append(String.format("%s, %s %s\n", student.getLastName(), student.getFirstName(), student.getStudentID())));

        // Drop the class and rebuild class combo boxes
        ScheduleQueries.dropScheduleByCourse(currentSemester, courseCode);
        ClassQueries.dropClass(currentSemester, courseCode);
        rebuildClassComboBoxes();
    }

    private void checkData() {
        try (BufferedReader breader = new BufferedReader(new FileReader("xzq789yy.txt"))) {
            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();

            author = new String(Base64.getDecoder().decode(encodedAuthor));
            project = new String(Base64.getDecoder().decode(encodedProject));
        } catch (FileNotFoundException e) {
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Fall 2024";
            saveData();
        } catch (IOException e) {
            System.exit(1);
        }
    }

    private void saveData() {
        try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("xzq789yy.txt", true))) {
            String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());
            bufferedWriter.write(encodedAuthor);
            bufferedWriter.newLine();

            String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
            bufferedWriter.write(encodedProject);
        } catch (IOException ioe) {
            System.exit(1);
        }
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> new MainFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JComboBox<String> addClassCourseCodeComboBox;
    private javax.swing.JLabel addClassCourseCodeLabel;
    private javax.swing.JLabel addClassSeatsLabel;
    private javax.swing.JSpinner addClassSeatsSpinner;
    private javax.swing.JButton addClassSubmitButton;
    private javax.swing.JLabel addClassSuccessLabel;
    private javax.swing.JLabel addCourseCourseCodeLabel;
    private javax.swing.JTextField addCourseCourseCodeTextField;
    private javax.swing.JLabel addCourseCourseDescriptionLabel;
    private javax.swing.JTextField addCourseCourseDescriptionTextField;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JLabel addSemesterSemesterNameLabel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JLabel addStudentFirstNameLabel;
    private javax.swing.JTextField addStudentFirstNameTextField;
    private javax.swing.JLabel addStudentLastNameLabel;
    private javax.swing.JTextField addStudentLastNameTextField;
    private javax.swing.JLabel addStudentStudentIDLabel;
    private javax.swing.JTextField addStudentStudentIDTextField;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JLabel addStudentSuccessLabel;
    private javax.swing.JComboBox<String> adminDropClassChooseClassComboBox;
    private javax.swing.JLabel adminDropClassChooseClassLabel;
    private javax.swing.JButton adminDropClassSubmitButton;
    private javax.swing.JTextArea adminDropClassTextArea;
    private javax.swing.JButton adminDropStudentSubmitButton;
    private javax.swing.JTextArea adminDropStudentTextArea;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JLabel chooseClassLabel;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JComboBox<String> displayClassListChooseClassComboBox;
    private javax.swing.JButton displayClassListDisplayButton;
    private javax.swing.JTabbedPane displayClassListTab;
    private javax.swing.JButton displayClassesDisplayButton;
    private javax.swing.JTextArea displayClassesTextArea;
    private javax.swing.JButton displayStudentScheduleDisplayButton;
    private javax.swing.JComboBox<String> displayStudentScheduleSelectStudentComboBox;
    private javax.swing.JLabel displayStudentScheduleSelectStudentLabel;
    private javax.swing.JTextArea displayStudentScheduleTextArea;
    private javax.swing.JLabel dropClassChooseClassLabel;
    private javax.swing.JLabel dropClassChooseStudentLabel;
    private javax.swing.JTabbedPane dropClassTab;
    private javax.swing.JComboBox<String> dropStudentChooseStudentComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> scheduleClassSelectClassComboBox;
    private javax.swing.JLabel scheduleClassSelectClassLabel;
    private javax.swing.JComboBox<String> scheduleClassSelectStudentComboBox;
    private javax.swing.JLabel scheduleClassSelectStudentLabel;
    private javax.swing.JButton scheduleClassSubmitButton;
    private javax.swing.JLabel scheduleClassSuccessField;
    private javax.swing.JLabel scheduleClassSuccessLabel;
    private javax.swing.JLabel scheduledStudentInClassLabel1;
    private javax.swing.JTextArea scheduledStudentsInClassTextArea;
    private javax.swing.JComboBox<String> studentDropClassChooseClassComboBox;
    private javax.swing.JComboBox<String> studentDropClassChooseStudentComboBox;
    private javax.swing.JButton studentDropClassSubmitButton;
    private javax.swing.JTextArea studentDropClassTextArea;
    private javax.swing.JLabel waitlistedStudentsInClassLabel;
    private javax.swing.JTextArea waitlistedStudentsInClassTextArea;
    // End of variables declaration//GEN-END:variables
}